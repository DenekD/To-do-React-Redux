{"version":3,"sources":["icons/checkedIcon.svg","icons/removeIcon.svg","reducers/task.js","actions/task.js","actiontypes/task.js","components/Input.js","components/Task.js","components/ToDoList.js","components/CompletedList.js","App.js","index.js"],"names":["module","exports","initialState","tasks","text","id","completed","addTask","type","removeTask","compliteTask","Input","state","value","handleChangeValue","e","setState","target","handleSubmit","preventDefault","props","onSubmit","this","className","onChange","placeholder","Component","Task","onClick","src","checkedIcon","alt","removeIcon","proTypes","PropTypes","string","isRequired","bool","func","ToDoList","filter","t","map","task","array","CompletedList","protoTypes","App","connect","dispach","bindActionCreators","PlayerActionCreators","store","createStore","action","newId","length","window","devToolsExtension","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc340aee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkedIcon.3f307db3.svg\";","module.exports = __webpack_public_path__ + \"static/media/removeIcon.87da3865.svg\";","import * as TaskActionTypes from '../actiontypes/task';\r\n\r\n\r\nconst initialState = {\r\n    tasks: [\r\n      {\r\n        text: \"kup głosnik\",\r\n        id: 0,\r\n        completed: false\r\n      },\r\n      {\r\n        text: \"wyrzuć śmieci\",\r\n        id: 1,\r\n        completed: false\r\n      },\r\n      {\r\n        text: \"zrób obiad\",\r\n        id: 2,\r\n        completed: true\r\n      },\r\n    ]\r\n}\r\n\r\nexport default function Task(state=initialState, action) {\r\n  switch(action.type) {\r\n    case TaskActionTypes.COMPLITE_TASK: {\r\n\r\n      return {\r\n        tasks: state.tasks.map( task => {\r\n          if( action.id === task.id) {\r\n            return {\r\n              ...task,\r\n              completed: true\r\n            }\r\n          }\r\n          return task;\r\n        })\r\n      }\r\n    }\r\n\r\n    case TaskActionTypes.REMOVE_TASK: {\r\n\r\n      return {\r\n        tasks: state.tasks.filter( task => action.id !== task.id)\r\n      }\r\n    }\r\n\r\n    case TaskActionTypes.ADD_TASK: {\r\n      var newId = state.tasks.length;\r\n      return {\r\n        tasks: [\r\n          {\r\n            text: action.text,\r\n            id: newId,\r\n            completed: false\r\n          },\r\n          ...state.tasks\r\n        ]\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n}","import * as TaskActionTypes from '../actiontypes/task';\r\n\r\nexport const addTask = text => {\r\n  return {\r\n    type: TaskActionTypes.ADD_TASK,\r\n    text\r\n  };\r\n};\r\n\r\nexport const removeTask = id => {\r\n  return {\r\n    type: TaskActionTypes.REMOVE_TASK,\r\n    id\r\n  }\r\n}\r\n\r\nexport const compliteTask = id => {\r\n  return {\r\n    type: TaskActionTypes.COMPLITE_TASK,\r\n    id\r\n  }\r\n}","export const  COMPLITE_TASK = 'task/COMPLITE_TASK';\r\nexport const  ADD_TASK = 'task/ADD_TASK';\r\nexport const  REMOVE_TASK = 'task/REMOVE_TASK';\r\n","import React, {Component} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Input extends Component {\r\n\tstate = {\r\n\t\tvalue: \"\"\r\n\t}\r\n\r\n\thandleChangeValue = (e) => {\r\n\t\tthis.setState({ value: e.target.value});\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.addTask(this.state.value);\r\n\t\tthis.setState({ value: \"\"})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<form onSubmit={this.handleSubmit} className=\"input\">\r\n\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\tonChange={this.handleChangeValue}\r\n\t\t\t\t\t\tplaceholder=\"add new task\"/>\r\n\t\t\t\t<button type=\"submit\" >\r\n\t\t\t\t\t<div className=\"plus\"></div>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nInput.propTypes = {\r\n\taddTask: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Input;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport checkedIcon from '../icons/checkedIcon.svg';\r\nimport removeIcon from '../icons/removeIcon.svg';\r\n\r\nconst Task = props =>\r\n\r\n    <li className=\"task\">\r\n\r\n        <span>{props.text}</span>\r\n\r\n        {!props.completed\r\n        \t? <img\r\n\t\t\t\t\t\t\tonClick={() => props.compliteTask(props.id)}\r\n\t\t\t\t\t\t\tsrc={checkedIcon}\r\n\t\t\t\t\t\t\talt=\"ok\"/>\r\n        \t: null}\r\n\r\n        <img\r\n\t\t\t\t\tsrc={removeIcon} alt=\"delete\"\r\n\t\t\t\t\tonClick={() => props.removeTask(props.id) }\r\n\t\t\t\t/>\r\n\t</li>\r\n\r\nTask.proTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n\t\tcompliteTask: PropTypes.func.isRequired,\r\n\t\tremoveTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from './Task';\r\n\r\n\r\nconst ToDoList = props =>\r\n\r\n\t<ul className=\"toDoList\">\r\n\t\t<h3>To Do</h3>\r\n\r\n\t\t{props.tasks.filter(t => !t.completed).map((task) =>\r\n\t\t\t<Task\r\n\t\t\t\ttext={task.text}\r\n\t\t\t\tcompleted={task.completed}\r\n\t\t\t\tid={task.id}\r\n\t\t\t\tcompliteTask={props.compliteTask}\r\n\t\t\t\tremoveTask={props.removeTask}\t/>\r\n\t\t)}\r\n\t</ul>;\r\n\r\n\r\nToDoList.proTypes = {\r\n\ttasks: PropTypes.array.isRequired,\r\n\tcompliteTask: PropTypes.func.isRequired,\r\n\tremoveTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from './Task';\r\n\r\nconst CompletedList = props =>\r\n\r\n\r\n<ul className=\"finishedList\">\r\n\t<h3>Completed</h3>\r\n\r\n\t{props.tasks.filter(t => t.completed).map((task) =>\r\n\t\t\t<Task\r\n\t\t\t\ttext={task.text}\r\n\t\t\t\tcompleted={task.completed}\r\n\t\t\t\tid={task.id}\r\n\t\t\t\tremoveTask={props.removeTask}\r\n\t\t\t/>\r\n\t\t)}\r\n</ul>\r\n\r\n\r\nCompletedList.protoTypes = {\r\n\ttasks: PropTypes.array.isRequired,\r\n\tremoveTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CompletedList;\r\n","import React, {Component} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as PlayerActionCreators from './actions/task';\r\n\r\nimport Input from './components/Input';\r\nimport ToDoList from './components/ToDoList';\r\nimport CompletedList from './components/CompletedList';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render () {\r\n    const {\r\n      tasks,\r\n      addTask,\r\n      removeTask,\r\n      compliteTask\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Input addTask={addTask} />\r\n        <ToDoList\r\n          tasks={tasks}\r\n          compliteTask={compliteTask}\r\n          removeTask={removeTask}\r\n        />\r\n        <CompletedList\r\n          tasks={tasks}\r\n          removeTask={removeTask}\r\n        />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n     tasks: state.tasks\r\n  }\r\n)\r\n\r\nconst mapDispachToProps = dispach => (\r\n  {\r\n    addTask: bindActionCreators(PlayerActionCreators.addTask, dispach),\r\n    removeTask: bindActionCreators(PlayerActionCreators.removeTask, dispach),\r\n    compliteTask: bindActionCreators(PlayerActionCreators.compliteTask, dispach)\r\n  }\r\n)\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(App);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport './index.css';\r\n\r\nimport TaskReducer from './reducers/task';\r\nimport App from './App';\r\n\r\n\r\nconst store = createStore(\r\n  TaskReducer,\r\n  window.devToolsExtension && window.devToolsExtension()\r\n)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}